---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/trending/movie/week?api_key=<DONT_EXPOSE_MY_DATA_PLEASE>&include_adult=false
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.1.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 10 Dec 2020 04:36:10 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      X-Memc:
      - MISS, STORE
      X-Memc-Key:
      - 19a47ad862a89b1ddf18f5e52ec3ef0c25abb553
      X-Memc-Age:
      - '0'
      X-Memc-Expires:
      - '600'
      Etag:
      - W/"2b618a8194792f8bd0b96a1110783596"
      Last-Modified:
      - Thu, 10 Dec 2020 04:36:10 GMT
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 2c861897aa9389c1f47299b6fea5b59d.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - zerlyD0LQldjTBPnUa6gl2qK2o45CH_BSJwgy6hQT-twgULGIKCMiQ==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 10 Dec 2020 04:36:10 GMT
recorded_with: VCR 6.0.0
